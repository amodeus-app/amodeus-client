name: Build for web and draft a release

on:
  push:
    tags:
      - '*'

env:
  JAVA_VERSION: "11"
  FLUTTER_CHANNEL: "beta"
  PAGES_CNAME: "web.amodeus.evgfilim1.me"

jobs:
  build:
    name: Build APK and web
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Export signing key
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo "$KEYSTORE_BASE64" | base64 -d >android/keystore.jks

      - name: Build app for Android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        run: flutter build apk --split-per-abi

      - name: Build app for web
        run: flutter build web

      - name: Rename APK files
        run: |
          version="$(jq -r .version build/web/version.json)"
          for file in build/app/outputs/flutter-apk/app-*.apk; do
            echo "$file" | sed "s/\.apk/_v$version.apk/" | xargs mv "$file"
          done

      - name: Patch app name for web
        run: |
          jq -c '.app_name = "AModeus"' build/web/version.json >build/web/version.new.json
          mv build/web/version{.new,}.json

      - name: Publish web on GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          cname: ${{ env.PAGES_CNAME }}
          publish_dir: build/web

      - name: Draft a release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          draft: true
          files: |
            build/app/outputs/flutter-apk/app-*.apk
